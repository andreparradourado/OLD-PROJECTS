;########################################################################################################
;## ANEXO D - LISTAGEM DO PROGRAMA
;########################################################################################################


;############################################################
;PROGRAMA TCC - CONTROLADOR E INDICADOR DE FLUXO DE �GUA   ##
;############################################################

;## ROTULA��O #############################################################################################
;QM1 - ENCHE
;QM2 - ESVAZIA
;~~ 20.0H AT� 20.7H - ZONA DE BIT ENDERE��VEL - �POSI��O DISPLAY
;~~ 20.0H - 00000001B - MENU I
;~~ 20.1H - 00000010B - MENU II
;~~ 20.2H - 00000100B - MENU III
;~~ 20.3H - 00001000B - SUBMENU III - I
;~~ 20.4H - 00010000B - SUBMENU III - II
;~~ 21.0H AT� 21.7H - ZONA DE BIT ENDERE��VEL - N�VEL M�NIMO SELECIONADO
NMIN1     BIT  00H   ;N�VEL M�NIMO = 1 = 0000-0001B
NMIN2     BIT  01H   ;N�VEL M�NIMO = 2 = 0000-0010B
NMIN3     BIT  02H   ;N�VEL M�NIMO = 3 = 0000-0100B
NMIN4     BIT  03H   ;N�VEL M�NIMO = 4 = 0000-1000B
;~~ 22.0H AT� 22.7H - ZONA DE BIT ENDERE��VEL - N�VEL M�XIMO SELECIONADO
NMAX1     BIT  08H   ;N�VEL M�XIMO = 1 = 0000-0001B
NMAX2     BIT  09H   ;N�VEL M�XIMO = 2 = 0000-0010B
NMAX3     BIT  0AH   ;N�VEL M�XIMO = 3 = 0000-0100B
NMAX4     BIT  0BH   ;N�VEL M�XIMO = 4 = 0000-1000B
;~~ OUTROS
TECLADO   EQU  P0    ;PORTA DE DADOS DO TECLADO
RS	  BIT  P1.0  ;PINO RS DO LCD
EN	  BIT  P1.1  ;PINO EN DO LCD
MDV       BIT  P1.3  ;PINO DO MEDIDOR DE VAZ�O
BOIA1     BIT  P1.4  ;PINO DA BOIA 1
BOIA2     BIT  P1.5  ;PINO DA BOIA 2
BOIA3     BIT  P1.6  ;PINO DA BOIA 3
BOIA4     BIT  P1.7  ;PINO DA BOIA 4
LCD       EQU  P2    ;PORTA DE DADOS LCD - D0 � D7
QM2       BIT  P3.0  ;PINO DO MOSFET 2
QM1       BIT  P3.1  ;PINO DO MOSFET 1


;## FUN��O -> MAIN ########################################################################################
	  ORG 00H
	  LJMP INICIO      ;PULA PARA INICIO
	  ORG 0030H
INICIO:	  LCALL CONFIGINI  ;CHAMA FUN��O QUE EXECUTA CONFIGURA��O INICIAL DO SISTEMA
VARRER:   LCALL MENU       ;CHAMA FUN��O QUE GERENCIA O DISPLAY
          LCALL VARREDURA  ;CHAMA FUN��O QUE GERENCIA O TECLADO
          LCALL LOGICA     ;CHAMA FUN��O QUE EXECUTA L�GICA DO SISTEMA
	  LJMP VARRER      ;GERA LOOP INFINITO


;## FUN��O -> CONFIGINI - CONFIGURA��O PR�-DEFINIDA DO SISTEMA ############################################
CONFIGINI: CLR QM1               ;DESLIGA MOTOR1
           CLR QM2               ;DESLIGA MOTOR2
           LCALL INIT_LCD        ;CHAMADA PARA SUB-ROTINA INICIALIZADORA DO DISPLAY LCD
           LCALL RESET_REG_DPTR  ;CHAMADA PARA SUB-ROTINA ENCARREDAGA DE LIMPEZA DOS ELEMENTOS
           MOV 020H,#00000001B   ;DEFINE POSI��O INICIAL DO DISPLAY
           MOV 021H,#00000001B   ;DEFINE N�VEL INICIAL M�NIMO PR�-DEFINIDO
           MOV 022H,#00001000B   ;DEFINE N�VEL INICIAL M�XIMO PR�-DEFINIDO
           RET


;## FUN��O -> MENU - PROCESSAMENTO DO DISPLAY #############################################################
MENU4:MOV A,#01H	 ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE18  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#0C0H        ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��ES, - CURSOR NA LINHA 2
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE19  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#94H         ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - CURSOR NA LINHA 3
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE20  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 3� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      LJMP FIM_MENU
MENU0:MOV A,#01H	 ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE9   ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#0C0H        ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��ES - CURSOR NA LINHA 2
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE10  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#94H         ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��ES - CURSOR NA LINHA 3
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE11  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 3� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      LJMP FIM_MENU
MENU: JB 00H,MENU0       ;VERIFICA SE O MENU SE ENCONTRA NA POSI��O 0
      JB 01H,MENU1       ;VERIFICA SE O MENU SE ENCONTRA NA POSI��O 1
      JB 02H,MENU2       ;VERIFICA SE O MENU SE ENCONTRA NA POSI��O 2
      JB 03H,MENU3       ;VERIFICA SE O MENU SE ENCONTRA NA POSI��O 3
      JB 04H,MENU4
      LJMP FIM_MENU
MENU1:MOV A,#01H	 ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE12  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#0C0H        ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - CURSOR NA LINHA 2
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE13  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#94H         ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��ES - CURSOR NA LINHA 3
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE14  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 3� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      LJMP FIM_MENU
MENU3:MOV A,#01H         ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE17  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#0C0H        ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��ES - CURSOR NA LINHA 2
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE19  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#94H         ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - CURSOR NA LINHA 3
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE20  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 3� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      LJMP FIM_MENU
MENU2:MOV A,#01H	 ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE15  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      MOV A,#0C0H        ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                         ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - CURSOR NA LINHA 2
      LCALL INST_LCD     ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
      MOV DPTR,#FRASE16  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
      LCALL TEXTO_LCD    ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                         ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
      LJMP FIM_MENU
FIM_MENU: LCALL NIVEL    ;CHAMA FUN��O QUE EXIBE N�VEL ATUAL DO SISTEMA
          RET


;## FUN��O -> GERENCIA TECLADO ############################################################################
VARREDURA:
;~~ VERIFICA LINHA A, PULA PARA FUN��O DE TECLA PRESSIONADA OU PARA PR�XIMA LINHA
LINHA_A: 	MOV TECLADO,#11111110B  ;SETO PARA COMPARA��O O BIT P0.1 REFERENTE A LINHA A DO TECLADO
		JNB P0.0, TECLA_UM      ;COMPARO COM O BIT P0.4 REFERENTE A COLUNA 1 DO TECLADO
        	JNB P0.1, TECLA_DOIS    ;COMPARO COM O BIT P0.5 REFERENTE A COLUNA 2 DO TECLADO
        	JNB P0.2, TECLA_TRES    ;COMPARO COM O BIT P0.6 REFERENTE A COLUNA 3 DO TECLADO
        	JNB P0.3, TECLA_A       ;COMPARO COM O BIT P0.7 REFERENTE A COLUNA 4 DO TECLADO
    	        LJMP LINHA_B            ;AVAN�A PARA A PR�XIMA LINHA CASO ESTA N�O TENHA SIDO A PRESSIONADA
TECLA_UM:	JB P0.0, SET_UM         ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_UM           ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_UM:         JB 03H, DNMIN1          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�NIMO E REDIRECIONA
                JB 04H, DNMAX1          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�XIMO E REDIRECIONA
                RET
DNMIN1:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 021H, #00000001B    ;ENVIA VALOR 1 PARA N�VEL M�NIMO
                RET
DNMAX1:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 022H, #00000001B    ;ENVIA VALOR 1 PARA N�VEL M�XIMO
                RET
TECLA_DOIS:	JB P0.1, SET_DOIS       ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_DOIS         ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_DOIS:       JB 03H, DNMIN2          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�NIMO E REDIRECIONA
                JB 04H, DNMAX2          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�XIMO E REDIRECIONA
		RET
DNMIN2:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 021H, #00000010B    ;ENVIA VALOR 2 PARA N�VEL M�NIMO
                RET
DNMAX2:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 022H, #00000010B    ;ENVIA VALOR 2 PARA N�VEL M�XIMO
                RET
TECLA_TRES:	JB P0.2, SET_TRES       ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_TRES         ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_TRES:       JB 03H, DNMIN3          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�NIMO E REDIRECIONA
                JB 04H, DNMAX3          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�XIMO E REDIRECIONA
		RET
DNMIN3:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 021H, #00000100B    ;ENVIA VALOR 3 PARA N�VEL M�NIMO
                RET
DNMAX3:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 022H, #00000100B    ;ENVIA VALOR 3 PARA N�VEL M�XIMO
                RET
TECLA_A:	JB P0.3, SET_A          ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_A            ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_A:          JB 00H, ESVAZIAR        ;VERIFICA SE EST� NO MENU CORRETO E REDIRECIONA
                JB 01H, DEFVALORMIN     ;VERIFICA SE EST� NO MENU CORRETO E REDIRECIONA
                RET
ESVAZIAR:       JB BOIA1, FIMESVAZIAR   ;QUANDO B�IA 1 DESACIONA, DESLIGAMOS O MOTOR
                MOV A,#01H	        ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
                LCALL INST_LCD          ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE21       ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
                LCALL TEXTO_LCD         ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                        ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                CLR QM1                 ;DESLIGA MOTOR QM1
                SETB QM2                ;LIGA MOTOR QM2
                LJMP ESVAZIAR           ;RETORNA PARA VERIFICA��O
FIMESVAZIAR:    CLR QM1                 ;DESLIGA MOTOR QM1
                CLR QM2                 ;DESLIGA MOTOR QM2
                MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 021H, #00000001B    ;ENVIA VALOR 1 (PR�-DEFINIDO) PARA N�VEL M�NIMO
                MOV 022H, #00001000B    ;ENVIA VALOR 4 (PR�-DEFINIDO) PARA N�VEL M�XIMO
                RET
DEFVALORMIN:    MOV 020H, #00001000B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                RET
;~~ VERIFICA LINHA B, PULA PARA FUN��O DE TECLA PRESSIONADA OU PARA PR�XIMA LINHA
LINHA_B:   	MOV P0,#11111101B       ;SETO O BIT P0.2 REFERENTE A LINHA B DO TECLADO
		JNB P0.0, TECLA_QUATRO  ;COMPARO COM O BIT P0.4 REFERENTE A COLUNA 1 DO TECLADO
        	JNB P0.3, TECLA_B       ;COMPARO COM O BIT P0.7 REFERENTE A COLUNA 4 DO TECLADO
        	LJMP LINHA_C            ;AVAN�A PARA A PR�XIMA LINHA CASO ESTA N�O TENHA SIDO A PRESSIONADA
TECLA_QUATRO:	JB P0.0,SET_QUATRO      ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_QUATRO       ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_QUATRO:     JB 03H, DNMIN4          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�NIMO E REDIRECIONA
                JB 04H, DNMAX4          ;VERIFICA SE ESTAMOS NO MENU DE DEFINIR N�VEL M�XIMO E REDIRECIONA
		RET
DNMIN4:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 021H, #00001000B    ;ENVIA VALOR 4 PARA N�VEL M�NIMO
                RET
DNMAX4:         MOV 020H, #00000001B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                MOV 022H, #00001000B    ;ENVIA VALOR 4 PARA N�VEL M�XIMO
                RET
TECLA_B:	JB P0.7, SET_B          ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_B            ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_B:          JB 00H,ENCHER           ;VERIFICA SE EST� NO MENU CORRETO E REDIRECIONA
                JB 01H,DEFVALORMAX      ;VERIFICA SE EST� NO MENU CORRETO E REDIRECIONA
                RET
DEFVALORMAX:    MOV 020H, #00001000B    ;ENVIA COORDENADA DE MENU PARA DISPLAY
                RET
ENCHER:         JNB BOIA4, FIMENCHER    ;VERIFICA SE A BOIA 4 EST� ACIONADO, SE SIM REDIRECIONA
                MOV A,#01H	        ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
                LCALL INST_LCD          ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE22       ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
                LCALL TEXTO_LCD         ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                        ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                SETB QM1                ;LIGA MOTOR QM1
                CLR QM2                 ;DESLIGA MOTOR QM2
                LJMP ENCHER             ;RETORNA PARA VERIFICAR SE J� EST� CHEIO
FIMENCHER:      CLR QM1                 ;DESLIGA MOTOR QM1
                CLR QM2                 ;DESLIGA MOTOR QM2
                MOV 020H, #00000001B    ;ENVIA COORDENADA PARA DISPLAY
                MOV 021H, #00000001B    ;ENVIA VALOR 1 (PR�-DEFINIDO) PARA N�VEL M�NIMO
                MOV 022H, #00001000B    ;ENVIA VALOR 4 (PR�-DEFINIDO) PARA N�VEL M�XIMO
                RET
;~~ VERIFICA LINHA C, PULA PARA FUN��O DE TECLA PRESSIONADA OU PARA PR�XIMA LINHA
LINHA_C: 	MOV P0,#11111011B       ;SETO O BIT P0.3 REFERENTE A LINHA C DO TECLADO
        	JNB P0.3, TECLA_C       ;COMPARO COM O BIT P0.7 REFERENTE A COLUNA 4 DO TECLADO
        	LJMP LINHA_D            ;AVAN�A PARA A PR�XIMA LINHA CASO ESTA N�O TENHA SIDO A PRESSIONADA
TECLA_C:	JB P0.3, SET_C          ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_C            ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_C:          MOV A,#01H	        ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
		LCALL INST_LCD          ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
		MOV DPTR,#FRASE23       ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD         ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                        ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LCALL DLOOP
                RET
;~~ VERIFICA LINHA D, PULA PARA FUN��O DE TECLA PRESSIONADA OU PARA PR�XIMA LINHA
LINHA_D: 	MOV P0,#11110111B       ;SETO O BIT P0.4 REFERENTE A LINHA D DO TECLADO
		JNB P0.0, TECLA_AST     ;COMPARO COM O BIT P0.4 REFERENTE A COLUNA 1 DO TECLADO
        	JNB P0.1, TECLA_ZERO    ;COMPARO COM O BIT P0.5 REFERENTE A COLUNA 2 DO TECLADO
        	JNB P0.2, TECLA_HSTG    ;COMPARO COM O BIT P0.6 REFERENTE A COLUNA 3 DO TECLADO
        	JNB P0.3, TECLA_D       ;COMPARO COM O BIT P0.7 REFERENTE A COLUNA 4 DO TECLADO
        	LJMP VARREDURA          ;AVAN�A PARA A PR�XIMA LINHA CASO ESTA N�O TENHA SIDO A PRESSIONADA
TECLA_AST:      JB P0.0, SET_AST        ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_AST          ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_AST:        JB 01H,ASTII            ;VERIFICA SE EST� NO MENU II
                JB 02H,ASTIII           ;VERIFICA SE EST� NO MENU III
                RET
ASTII:          MOV 020H, #00000001B;   ;ENVIA COORDENADA DE DISPLAY
                RET
ASTIII:         MOV 020H, #00000010B;   ;ENVIA COORDENADA DE DISPLAY
                RET
TECLA_ZERO:	JB P0.1,SET_ZERO        ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_ZERO         ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_ZERO:       RET
TECLA_HSTG:	JB P0.2, SET_HSTG       ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_HSTG         ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_HSTG:       JB 00H,HSTGI            ;VERIFICA SE EST� NO MENU I
                JB 01H,HSTGII           ;VERIFICA SE EST� NO MENU II
                RET
HSTGI:          MOV 020H, #00000010B;   ;ENVIA COORDENADA DE DISPLAY
                RET
HSTGII:         MOV 020H, #00000100B;   ;ENVIA COORDENADA DE DISPLAY
                RET
TECLA_D:	JB P0.3, SET_D          ;PROSSEGUE SE TECLA PRESSIONADA FOR SOLTA (LIMITA EM 1 DADO POR VEZ)
                LJMP TECLA_D            ;AGUARDA CASO O BOT�O PRESSIONADO AINDA N�O TENHA SIDO SOLTO
SET_D:          LCALL CONFIGINI         ;TECLA DE RESET DE SISTEMA
                RET


;## FUN��O -> L�GICA ######################################################################################
LOGICA:                                        ;INICIA NIVELAMENTO DE N�VEL M�NIMO SELECIONADO
CHECANIVELMINIMO: JB 0BH, MINBOIA4             ;VERIFICA SE O NIVEL M�NIMO SELECIONADO � 4 E REDIRECIONA
                  JB 0AH, MINBOIA3             ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 3 E REDIRECIONA
                  JB 09H, MINBOIA2             ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 2 E REDIRECIONA
                  JB 08H, MINBOIA1             ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 1 E REDIRECIONA
                  LJMP CHECANIVELMAXIMO        ;PULA PARA VERIFICA��O DO N�VEL M�XIMO
MINBOIA4:         JNB BOIA4, CHECANIVELMAXIMO  ;VERIFICA SE A B�IA 4 EST� ACIONADA OU N�O
                  SETB QM1                     ;LIGA MOTOR QM1 SE A BOIA 4 N�O ESTIVER ACIONADA
                  LJMP MINBOIA4                ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 4
MINBOIA3:         JNB BOIA3, CHECANIVELMAXIMO  ;VERIFICA SE A B�IA 3 EST� ACIONADA OU N�O
                  SETB QM1                     ;LIGA MOTOR QM1 SE A BOIA 3 N�O ESTIVER ACIONADA
                  LJMP MINBOIA3                ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 3
MINBOIA2:         JNB BOIA2, CHECANIVELMAXIMO  ;VERIFICA SE A B�IA 2 EST� ACIONADA OU N�O
                  SETB QM1                     ;LIGA MOTOR QM1 SE A BOIA 2 N�O ESTIVER ACIONADA
                  LJMP MINBOIA2                ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 2
MINBOIA1:         JNB BOIA1, CHECANIVELMAXIMO  ;VERIFICA SE A B�IA 1 EST� ACIONADA OU N�O
                  SETB QM1                     ;LIGA MOTOR QM1 SE A BOIA 1 N�O ESTIVER ACIONADA
                  LJMP MINBOIA1                ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 1
CHECANIVELMAXIMO: CLR QM2
                  CLR QM1                      ;DESLIGA MOTOR QM1 AO ATINGIR O N�VEL M�NIMO SELECIONADO E ->
                                               ;-> E INICIA NIVELAMENTO DE N�VEL M�XIMO SELECIONADO
                  JB 13H, MAXBOIA44            ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 4 E REDIRECIONA
                  JB 12H, MAXBOIA34            ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 3 E REDIRECIONA
                  JB 11H, MAXBOIA24            ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 2 E REDIRECIONA
                  JB 10H, MAXBOIA14            ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 1 E REDIRECIONA
                  LJMP DESLIGAMOTOR
MAXBOIA44:        LJMP DESLIGAMOTOR            ;DESLIGA MOTOR POIS N�O VERIFICAMOS ACIMA DE 4
MAXBOIA34:        SETB QM2                     ;LIGA MOTOR QUE ESVAZIA O TANQUE
MAXBOIA344:       JB BOIA3, RELIGAMOTOR34      ;VERIFICA SE A BOIA 3 FOI DESACIONADA E REDIRECIONA CASO SIM
                  LJMP MAXBOIA344              ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 3
RELIGAMOTOR34:    CLR QM2                      ;DESLIGA MOTOR QUE ESTAVA ESVAZIANDO AO DESACIONAR B�IA 3
                  SETB QM1                     ;RELIGA MOTOR QUE ENCHE AT� ESTE CONFIRMAR QUE O N�VEL CHEGOU A 3 (B�IA 3)
                  JNB BOIA3, DESLIGAMOTOR      ;DESLIGA MOTOR CASO A B�IA 3 SEJA ACIONADA
                  LJMP RELIGAMOTOR34           ;RETORNA PARA VERIFICA��O DA B�IA 3
MAXBOIA24:        SETB QM2                     ;LIGA MOTOR QUE ESVAZIA O TANQUE
MAXBOIA244:       JB BOIA2, RELIGAMOTOR24      ;VERIFICA SE A BOIA 2 FOI DESACIONADA E REDIRECIONA CASO SIM
                  LJMP MAXBOIA244              ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 2
RELIGAMOTOR24:    CLR QM2                      ;DESLIGA MOTOR QUE ESTAVA ESVAZIANDO AO DESACIONAR B�IA 2
                  SETB QM1                     ;RELIGA MOTOR QUE ENCHE AT� ESTE CONFIRMAR QUE O N�VEL CHEGOU A 2 (B�IA 2)
                  JNB BOIA2, DESLIGAMOTOR      ;DESLIGA MOTOR CASO A B�IA 2 SEJA ACIONADA
                  LJMP RELIGAMOTOR24           ;RETORNA PARA VERIFICA��O DA B�IA 3
MAXBOIA14:        SETB QM2                     ;LIGA MOTOR QUE ESVAZIA O TANQUE
MAXBOIA144:       JB BOIA1, RELIGAMOTOR14      ;VERIFICA SE A BOIA 1 FOI DESACIONADA E REDIRECIONA CASO SIM
                  LJMP MAXBOIA144              ;RETORNA PARA VERIFICA��O DE STATUS DA B�IA 1
RELIGAMOTOR14:    CLR QM2                      ;DESLIGA MOTOR QUE ESTAVA ESVAZIANDO AO DESACIONAR B�IA 1
                  SETB QM1                     ;RELIGA MOTOR QUE ENCHE AT� ESTE CONFIRMAR QUE O N�VEL CHEGOU A 1 (B�IA 1)
                  JNB BOIA1, DESLIGAMOTOR      ;DESLIGA MOTOR CASO A B�IA 1 SEJA ACIONADA
                  LJMP RELIGAMOTOR14           ;RETORNA PARA VERIFICA��O DA B�IA 3
DESLIGAMOTOR:     CLR QM1                      ;DESLIGA MOTOR1
                  CLR QM2                      ;DESLIGA MOTOR2
                  RET


;## FUN��ES -> GERENCIAMENTO DE DISPLAY LCD ###############################################################
INIT_LCD:	MOV A,#38H	  ;FIXA��O DAS CONDI��ES DE UTILIZA��O                                 ##1� INFORMA��O
		LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY                 ##2� EXECU��O
		MOV A,#06H	  ;ESCREVE DESLOCANDO O CURSOR PARA A DIREITA
		LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
		MOV A,#0CH	  ;DEFINE COMO DISPLAY ACESO SEM CURSOR
		LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
		MOV A,#01H	  ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
		LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
		MOV DPTR,#FRASE1  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                MOV A,#0C0H       ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                                  ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - LINHA 2
                LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE2  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        MOV A,#094H       ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE
                                  ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - LINHA 3
                LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE3  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 3� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        MOV A,#0D4H       ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE
                                  ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - LINHA 3
                LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE4  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        LCALL DLOOP       ;ROTINA DELAYLOOP
	        MOV A,#01H	  ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
		LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
		MOV DPTR,#FRASE5  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 1� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                MOV A,#0C0H       ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                                  ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - LINHA 2
                LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE6  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 2� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        MOV A,#094H       ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                                  ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - LINHA 3
                LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE7  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 3� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        MOV A,#0D4H       ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                                  ;SER� ESCRITO AS PR�XIMAS INFORMA��Es - LINHA 3
                LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                MOV DPTR,#FRASE8  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD   ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                  ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        LCALL DLOOP       ;ROTINA DELAYLOOP
                MOV A,#01H	  ;LIMPA DISPLAY E RETORNA O CURSOR PARA O INICIO
		LCALL INST_LCD    ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
		LCALL DLOOP
		RET
INST_LCD:	CLR RS            ;RESETA O PINO RS
		CLR EN            ;RESETA O PINO EN
		MOV LCD,A         ;ENVIA DO ACUMULADOR PARA O LCD OS DADOS DE B0 � B7 QUE CONT�M POSS�VEIS COMANDOS
		SETB EN           ;SETA O PINO EN
		LCALL ATRASO_LCD  ;CHAMA ROTINA DE ATRASO QUE OS LCD'S REQUISITAM
		CLR EN            ;RESETA O PINO EN
		RET
ATRASO_LCD:	MOV R7,#14H       ;MOVE PARA R7 O VALOR 20
LACO1:		MOV R6,#0FAH      ;MOVE PARA R6 O VALOR 250
		DJNZ R6,$         ;DECREMENTE O REGISTRADOR 6 E SALTA QUANDO DIFERENTE DE ZERO
		DJNZ R7,LACO1     ;DECREMENTE O REGISTRADOR 7 E SALTA QUANDO DIFERENTE DE ZERO
                RET
DADO_LCD:	SETB RS           ;SETA O PINO RS
		CLR EN            ;RESETA O PINO EN
		MOV LCD,A         ;ENVIA PARA O ACUMULADOR OS DADOS DE B0 � B7 QUE CONT�M POSS�VEIS COMANDOS
		SETB EN           ;SETA O PINO EN
		LCALL ATRASO_LCD  ;CHAMA ROTINA DE ATRASO QUE OS LCD'S REQUISITAM
		CLR EN            ;RESETA O PINO EN
		RET
TEXTO_LCD:	CLR A             ;LIMPA O ACUMULADOR
		MOVC A,@A+DPTR    ;MOVE O CONTE�DO DA POSI��O DA MEM�RIA ROM ENDERE�ADA POR A+PC.
		JZ TEXTO_FIM      ;SALTA SE O ACUMULADOR FOR ZERO
		LCALL DADO_LCD    ;CHAMADA PARA SUB-ROTINA QUE EXIBE INFORMA��O NO DISPLAY
		INC DPTR          ;INCREMENTA O DPTR
		LJMP TEXTO_LCD    ;PULA PARA TEXTO_LCD
TEXTO_FIM:	RET


;## FUN��O - VERIFICA B�IAS - EXIBE N�VEL ATUAL, M�NIMO E M�XIMO ##########################################
NIVEL:          MOV A,#0D4H          ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE 
                                     ;SER� ESCRITO AS PR�XIMAS INFORMA��ES - LINHA 4
                LCALL INST_LCD       ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
N_ATUAL:        JNB BOIA4, N_ATUAL4  ;VERIFICA SE A BOIA 4 EST� ACIONADO E REDIRECIONA CASO SIM
                JNB BOIA3, N_ATUAL3  ;VERIFICA SE A BOIA 3 EST� ACIONADO E REDIRECIONA CASO SIM
                JNB BOIA2, N_ATUAL2  ;VERIFICA SE A BOIA 2 EST� ACIONADO E REDIRECIONA CASO SIM
                JNB BOIA1, N_ATUAL1  ;VERIFICA SE A BOIA 1 EST� ACIONADO E REDIRECIONA CASO SIM
                LJMP FIM_NVA         ;EM CASO DE ERRO PULA PARA FIM DA VERIFICA��O DO N�VEL ATUAL
N_ATUAL4:       MOV DPTR,#DN_ATUAL4  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NVA         ;PULA PARA FIM DA VERIFICA��O DO N�VEL ATUAL
N_ATUAL3:       MOV DPTR,#DN_ATUAL3  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NVA         ;PULA PARA FIM DA VERIFICA��O DO N�VEL ATUAL
N_ATUAL2:       MOV DPTR,#DN_ATUAL2  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
	        LJMP FIM_NVA         ;PULA PARA FIM DA VERIFICA��O DO N�VEL ATUAL
N_ATUAL1:       MOV DPTR,#DN_ATUAL1  ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NVA         ;PULA PARA FIM DA VERIFICA��O DO N�VEL ATUAL
FIM_NVA:        LJMP N_MIN           ;PULA PARA INICIO DE EXIBI��O DE N�VEL M�NIMO SELECIONADO
N_MIN:          JB NMIN4, N_MIN4     ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 4, CASO SIM REDIRECIONA
                JB NMIN3, N_MIN3     ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 3, CASO SIM REDIRECIONA
                JB NMIN2, N_MIN2     ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 2, CASO SIM REDIRECIONA
                JB NMIN1, N_MIN1     ;VERIFICA SE O N�VEL M�NIMO SELECIONADO � 1, CASO SIM REDIRECIONA
                LJMP FIM_NMIN        ;EM CASO DE ERRO PULA PARA FIM DA VERIFICA��O DO N�VEL M�NIMO SELECIONADO
N_MIN4:         MOV DPTR,#DN_MIN4    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NMIN        ;PULA PARA FIM DA VERIFICA��O DO N�VEL M�NIMO SELECIONADO
N_MIN3:         MOV DPTR,#DN_MIN3    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NMIN        ;PULA PARA FIM DA VERIFICA��O DO N�VEL M�NIMO SELECIONADO
N_MIN2:         MOV DPTR,#DN_MIN2    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NMIN        ;PULA PARA FIM DA VERIFICA��O DO N�VEL M�NIMO SELECIONADO
N_MIN1:         MOV DPTR,#DN_MIN1    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NMIN        ;PULA PARA FIM DA VERIFICA��O DO N�VEL M�NIMO SELECIONADO
FIM_NMIN:       LJMP N_MAX           ;PULA PARA INICIO DE EXIBI��O DE N�VEL M�XIMO SELECIONADO
N_MAX:          JB NMIN4, N_MAX4     ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 4, CASO SIM REDIRECIONA
                JB NMIN3, N_MAX3     ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 3, CASO SIM REDIRECIONA
                JB NMIN2, N_MAX2     ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 2, CASO SIM REDIRECIONA
                JB NMIN1, N_MAX1     ;VERIFICA SE O N�VEL M�XIMO SELECIONADO � 1, CASO SIM REDIRECIONA
                LJMP FIM_NIVEIS
N_MAX4:         MOV DPTR,#DN_MAX4    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM, 
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NIVEIS      ;PULA PARA FIM DA VERIFICA��O DE N�VEL M�XIMO SELECIONADO
N_MAX3:         MOV DPTR,#DN_MAX3    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NIVEIS      ;PULA PARA FIM DA VERIFICA��O DE N�VEL M�XIMO SELECIONADO
N_MAX2:         MOV DPTR,#DN_MAX2    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NIVEIS      ;PULA PARA FIM DA VERIFICA��O DE N�VEL M�XIMO SELECIONADO
N_MAX1:         MOV DPTR,#DN_MAX1    ;MOVE PARA DPTR A FRASE QUE IR� SER FIXADA NA 4� LINHA DO DISPLAY LCD
	        LCALL TEXTO_LCD      ;CHAMADA PARA SUB-ROTINA ENCARREGADA DE EXIBIR A MENSAGEM,
                                     ;ANTERIORMENTE ANEXADA AO DPTR, NO DISPLAY
                LJMP FIM_NIVEIS      ;PULA PARA FIM DA VERIFICA��O DE N�VEIS
FIM_NIVEIS:     MOV A,#080H          ;MOVE PARA O ACUMULADOR A POSI��O DO DISPLAY ONDE SER�
                                     ;ESCRITO AS PR�XIMAS INFORMA��ES - LINHA 4
                LCALL INST_LCD       ;CHAMA ROTINA DE ENVIO DE INFORMA��ES PARA O DISPLAY
                RET


;## FUN��O -> ROTINA DE LIMPEZA E RESET DE ELEMENTOS ######################################################
RESET_REG_DPTR:       CLR A        ;RESETA O ACUMULADOR
                      MOV B,#0     ;RESETA O B
                      MOV R0,#0    ;MOVE O VALOR 0 NO REGISTRADOR 0
                      MOV R1,#0    ;MOVE O VALOR 0 NO REGISTRADOR 1
                      MOV R2,#0    ;MOVE O VALOR 0 NO REGISTRADOR 2
                      MOV R3,#0    ;MOVE O VALOR 0 NO REGISTRADOR 3
                      MOV R4,#0    ;MOVE O VALOR 0 NO REGISTRADOR 4
                      MOV R5,#0    ;MOVE O VALOR 0 NO REGISTRADOR 5
                      MOV R6,#0    ;MOVE O VALOR 0 NO REGISTRADOR 6
                      MOV R7,#0    ;MOVE O VALOR 0 NO REGISTRADOR 7
                      MOV 020H,#0  ;MOVE O VALOR 0 NO ENDERE�O
                      MOV 021H,#0  ;MOVE O VALOR 0 NO ENDERE�O
                      MOV 022H,#0  ;MOVE O VALOR 0 NO ENDERE�O
                      MOV DPTR,#0  ;MOVE O VALOR 0 NO DPTR
                      RET


;## FUN��O -> DELAY LOOP ##################################################################################
DLOOP:  LCALL DELAY
        LCALL DELAY
        LCALL DELAY
        RET
DELAY:  MOV R7, #0FFH  ;CARREGA R7 COM FF
L1:     MOV R6, #0FFH  ;CARREGA R6 COM FF
L2:     DJNZ R6, L2    ;DEC. R6, DIF. 0, DESVIA PARA L2
        DJNZ R7, L1    ;DEC. R7, DIF. 0, DESVIA PARA L1
        RET            ;SAI DA SUB-ROTINA


;##########################################################################################################
;>> DB << ;DB RESERVA LUGAR NA CODE PARA ENVIAR AO DISPLAY
;(,0) SERVE PARA INDICAR FIM DE FRASE
;##########################################################################################################
FRASE1:	    DB '    CONTROLADOR     ',0
FRASE2:     DB '         &&         ',0
FRASE3:     DB '     INDICADOR      ',0
FRASE4:     DB '   NIVEL DE AGUA    ',0
FRASE5:	    DB 'ANDRE PARRA DOURADO ',0
FRASE6:     DB 'XXXXXXXXXXXXXXXXXXXX',0
FRASE7:     DB 'XXXXXXXXXXXXXXXXXXXX',0
FRASE8:     DB 'XXXXXXXXXXXXXXXXXXXX',0
FRASE9:     DB '      MENU I     #->',0 ;#20.0H-00000001B-MENUI
FRASE10:    DB 'A-ESVAZIAR          ',0
FRASE11:    DB 'B-ENCHER            ',0
FRASE12:    DB '<-*   MENU II    #->',0 ;#20.1H-00000010B-MENUII
FRASE13:    DB 'A-DEFINE MINIMO     ',0
FRASE14:    DB 'B-DEFINE MAXIMO     ',0
FRASE15:    DB '<-*   MENU III      ',0 ;#20.2H-00000100B-MENUIII
FRASE16:    DB 'C-CONSUMO DIARIO    ',0
FRASE17:    DB 'DEFINE MINIMO:      ',0 ;#20.3H-00001000B-SUBMENUIII - I
FRASE18:    DB 'DEFINE MAXIMO:      ',0 ;#20.4H-00010000B-SUBMENUIII - II
FRASE19:    DB ' 1 = 1L      2 = 2L ',0
FRASE20:    DB ' 3 = 3L      4 = 4L ',0
FRASE21:    DB '     ESVAZIANDO     ',0
FRASE22:    DB '      ENCHENDO      ',0
FRASE23:    DB '   EM CONSTRUCAO!   ',0
DN_ATUAL1:  DB ' NA=1 ',0
DN_ATUAL2:  DB ' NA=2 ',0
DN_ATUAL3:  DB ' NA=3 ',0
DN_ATUAL4:  DB ' NA=4 ',0
DN_MIN1:    DB 'NMIN=1 ',0
DN_MIN2:    DB 'NMIN=2 ',0
DN_MIN3:    DB 'NMIN=3 ',0
DN_MIN4:    DB 'NMIN=4 ',0
DN_MAX1:    DB 'NMAX=1 ',0
DN_MAX2:    DB 'NMAX=2 ',0
DN_MAX3:    DB 'NMAX=3 ',0
DN_MAX4:    DB 'NMAX=4 ',0
            END